FROM golang:1.24-alpine AS builder

WORKDIR /app

# Copy only the dependency files first for better caching
COPY go.mod go.sum ./
RUN go mod download

# Copy the rest of the application
COPY . .

# Build the application with the correct path to main.go
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o main ./cmd

FROM alpine:latest

RUN apk --no-cache add ca-certificates tzdata

ENV TZ=Asia/Jakarta

WORKDIR /app

# Copy the binary
COPY --from=builder /app/main .

COPY --from=builder /app/pkg ./pkg
COPY --from=builder /app/services ./services
COPY --from=builder /app/data ./data
COPY --from=builder /app/go.mod .


COPY --from=builder /app/.env.local .


EXPOSE 8080

CMD ["./main"]